<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://ehouse.space/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.0">Jekyll</generator><link href="http://ehouse.space/feed.xml" rel="self" type="application/atom+xml" /><link href="http://ehouse.space/" rel="alternate" type="text/html" /><updated>2016-11-26T18:48:21-05:00</updated><id>http://ehouse.space//</id><title type="html">Evan House</title><subtitle>My name is Evan and this is my website :D
</subtitle><entry><title type="html">Wildhacks (NU Hackathon)!</title><link href="http://ehouse.space/sports,/coding/2016/11/21/Wildhacks_(NU_Hackathon).html" rel="alternate" type="text/html" title="Wildhacks (NU Hackathon)!" /><published>2016-11-21T00:00:00-05:00</published><updated>2016-11-21T00:00:00-05:00</updated><id>http://ehouse.space/sports,/coding/2016/11/21/Wildhacks_(NU_Hackathon)</id><content type="html" xml:base="http://ehouse.space/sports,/coding/2016/11/21/Wildhacks_(NU_Hackathon).html">&lt;head&gt;
&lt;style&gt;
.center {
	display: block;
	margin-left: auto;
	margin-right: auto;
}
&lt;/style&gt;
&lt;/head&gt;

&lt;p&gt;This past weekend, Northwestern held their annual hackathon called Wildhacks. I remember seeing participants in the events the past few years; I was always impressed and slightly intimidated seeing them at work/play. This year, I finally was a participant myself, and I wish I had gotten involved sooner.&lt;/p&gt;

&lt;p&gt;The coding portion of the hackathon began Friday night around 10pm and ran until Sunday morning 10am. A few buddies and I got together for dinner (provided by Wildhacks) and got talking about our idea. My friend Eugene and I are big League of Legends/esports fans, so we wanted to work on a project in that direction.&lt;/p&gt;

&lt;p&gt;Over the past couple weeks I had been thinking about the developing e-sports industry– the 2015 League World Championships had 36 million viewers compared to 31 million viewers for the most viewed NBA Finals in the past 19 years! Over the past 10-15 years, sports data analysis has become huge, and I would not be surprised if something similar happens with e-sports like League of Legends. For this reason, my friends and I thought we would use the Riot Games API to pull live data, and use a machine learning algorithm like id3 to develop a win chance predictor. The idea was for the end product to look something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://evancasa.me/assets/espn_predictor.png&quot; alt=&quot;espn predictor&quot; class=&quot;img-responsive center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;However, after we took a closer look at the API and had made some requests, we realized the live game data which Riot provides is very limited. Since we found that there is no way to get live updated statistics on a League of Legends game, we changed up our plans and decided to build a live box score with the basics statistics. We also decided to include a predictor like above, however our focus was on building the web app and not the algorithm.&lt;/p&gt;

&lt;p&gt;The app was basically a pure JavaScript application, built with Node, Angular, Express and mongoDB. JavaScript is pretty new to me, so I was happy becauseI learned a lot lot lot. We starte Friday night and my friend who has a lot more experience in JavaScript set up the directory framework. We also spent some time talking about design, and how our app would look. We wrote our HTML file and styled it after the way League of Legends live viewers receive their statistics.&lt;/p&gt;

&lt;p&gt;Our app had two main sides, and both were modeled after this initial HTML file. Because Riot’s API did not give us much information about the live game data, we had to make a data entry form for someone who is following the game. Just as there are reporters who record data as it happens (&lt;a href=&quot;http://www.stats.com/join-our-team/#positions&quot;&gt;Data Reporter Positon&lt;/a&gt;), we built the framework for a League Data Reporter to enter data. Our data entry form looks like this:&lt;/p&gt;

&lt;p&gt;You can start by creating a game here:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://evancasa.me/assets/lol_data_entry1.png&quot; alt=&quot;LoLCast Create Data Entry&quot; class=&quot;img-responsive center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once you see the data entry page, the user may update the team names and team member names. After that, it is easy to update statistics with a click of a button. Here is what it looks like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://evancasa.me/assets/lol_data_entry2.png&quot; alt=&quot;LoLCast Data Entry Form&quot; class=&quot;img-responsive center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the other end, the user can choose a game from our home page (ignore all the test games :P) :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://evancasa.me/assets/lol_homepage.png&quot; alt=&quot;LoLCast Home Page&quot; class=&quot;img-responsive center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once the user chooses a game, he can follow the game live. The page updates every 4 seconds:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://evancasa.me/assets/lol_game_view.png&quot; alt=&quot;LoLCast View Game&quot; class=&quot;img-responsive center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And that is the simplest explanation of our web app! As I said before, I had never participated in a hackathon before, but I really enjoyed this experience. Maybe when my roommate and I are done taking classes after Winter quarter, we will travel to a bunch of hackathons in the Spring. I learned a &lt;em&gt;ton&lt;/em&gt; during this hackathon. Before we started, I had barely any exposure to JavaScript, and now we have a fully functioning JavaScript web application! I particularly enjoyed learning how to connect the information in the database on the backend to the win prediction algorithm I had written, and then turning that into a pretty display on the front end.&lt;/p&gt;

&lt;p&gt;Some of the things we ran into while writing the algorithm were	 interesting as well. We found that at the beginning of the game, the win probability was more volatile, and later on, the win probability changed  slowly. In reality though, getting objectives later on in a game of League of Legends tends to have a much greater impact. We accounted for this by assigning different weights to the objectives based on the number of events which had occured. That said, our algorithm still needs more work!&lt;/p&gt;

&lt;p&gt;I am also more used to working on my own on a project, but it was fun to work together in a team. When we were discussing ideas and design, I found it really helpful to have other people to talk it over with. Naturally we have our own blind spots, so we can help each other spot those, then work together to have the best design. We are talking about turning the app into a Google Chrome extension that would allow the user to pool up the box score, &lt;em&gt;while&lt;/em&gt; they’re watching the game on Twitch.&lt;/p&gt;

&lt;p&gt;By the end of the hackathon, I was pretty exhausted, and the 3:30am - 5:30am stretch on Sunday morning was pretty tough, but once the sun started to come back out I was good to go. I am still recovering, but I am looking forward to the next hackathon :)&lt;/p&gt;</content><summary type="html"></summary></entry><entry><title type="html">Starting my own website with Jekyll!</title><link href="http://ehouse.space/coding/2016/11/02/Starting_my_website_with_Jekyll.html" rel="alternate" type="text/html" title="Starting my own website with Jekyll!" /><published>2016-11-02T00:00:00-04:00</published><updated>2016-11-02T00:00:00-04:00</updated><id>http://ehouse.space/coding/2016/11/02/Starting_my_website_with_Jekyll</id><content type="html" xml:base="http://ehouse.space/coding/2016/11/02/Starting_my_website_with_Jekyll.html">&lt;p&gt;I spent most of today setting up my personal website! My brother recommended using Jekyll so I started by looking into what Jekyll was and how I could start using it. I ran into a little trouble at the outset trying to install rubygems (a prerequisite to jekyll). There was a conflict regarding permissions of ruby which came installed on the Mac. I played around with rbenv but eventually found a way to install rubygems and consequently jekyll smoothly.&lt;/p&gt;

&lt;p&gt;After that, I still did not have much of an idea of what I was doing. As always, reading through various sections of the documentation (a few times) was quite helpful. It was pretty neat to see the set up of the basic website after I had figured it out; jekyll is pretty neat! Liquid too, which reminds me of jinjja.&lt;/p&gt;

&lt;p&gt;Through the same process of playing around, trying different things and reading documentation, I added a few additional categories in the navbar of my website. This was pretty straightforward, then my next task was to set up the post formats in each of the categories. I decided I wanted my thoughts category to simply have text and not links to posts, as the writing would all be pretty short.&lt;/p&gt;

&lt;p&gt;This led me to reading up a bit on collections in jekyll. Of course in (my experience with) coding, things do not work the first time, and this was no exception. I had a silly mistake that led to my html tags being escaped in each addition to the collection. Once I figured this out I slightly edited the format of that category.&lt;/p&gt;

&lt;p&gt;I wanted the other sections: coding, faith, life and sports, to be set up with certain posts on that page, while I wanted &lt;em&gt;all&lt;/em&gt; posts to be in the main page regardless of category. The learning process was the same, and it was fun! The main problem was figuring out how to organize my posts within my directories, and then accessing them in each category. For example, at one point I had each test in the right category, however it would make a whole distinct category for that post. Once I got this resolved, I cleaned up the presentation just a bit, and now I have the basic framework of my website set up :D&lt;/p&gt;

&lt;p&gt;I am looking forward to doing more with this website, and hopefully I will write at least one post each week!&lt;/p&gt;</content><category term="coding" /><summary type="html">I spent most of today setting up my personal website! My brother recommended using Jekyll so I started by looking into what Jekyll was and how I could start using it. I ran into a little trouble at the outset trying to install rubygems (a prerequisite to jekyll). There was a conflict regarding permissions of ruby which came installed on the Mac. I played around with rbenv but eventually found a way to install rubygems and consequently jekyll smoothly.</summary></entry></feed>
